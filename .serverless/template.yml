AWSTemplateFormatVersion: 2010-09-09
Transform:
  - AWS::Serverless-2016-10-31
  - AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''
  SimpleCastSecret:
    Type: String
    Description: The simplecast API key.
    Default: ''
  YoutubeId:
    Type: String
    Description: The youtube application id.
    Default: ''
  YoutubeKey:
    Type: String
    Description: The youtube secret key.
    Default: ''
  TwitterConsumerApiKey:
    Type: String
    Description: The twitter consumer api key.
    Default: ''
  TwitterConsumerApiSecret:
    Type: String
    Description: The twitter consumer api secret key.
    Default: ''
  TwitterAccessToken:
    Type: String
    Description: The twitter access token.
    Default: ''
  TwitterAccessSecret:
    Type: String
    Description: The twitter application secret.
    Default: ''
  AWSAccessKey:
    Type: String
    Description: The access key to AWS.
    Default: ''
  AWSAccessSecretKey:
    Type: String
    Description: The access key secret to AWS.
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: Canary10Percent5Minutes
      Role: !Ref CodeDeployRole

Resources:
  CodefictionStats:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      Environment:
        Variables:
          NODE_ENV: production
          SECRET: !Ref SimpleCastSecret
          YOUTUBE: !Ref YoutubeId
          YOUTUBE_KEY: !Ref YoutubeKey
          TWITTER_CONSUMER_API_KEY: !Ref TwitterConsumerApiKey
          TWITTER_CONSUMER_API_SECRET_KEY: !Ref TwitterConsumerApiSecret
          TWITTER_ACCESS_TOKEN: !Ref TwitterAccessToken
          TWITTER_ACCESS_SECRET: !Ref TwitterAccessSecret
          AWS_ACCESS_KEY: !Ref AWSAccessKey
          AWS_ACCESS_SECRET_KEY: !Ref AWSAccessSecretKey
      Role:
        Fn::GetAtt:
          - LambdaExecutionRole
          - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
        PostEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
